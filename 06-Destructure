/*............Importants Points ..................*/
> Destructor is an instance membre function of a class
> The name of the destructor is same as the name of a class but preceded y tilde(~) symbol .
> Destructors can never be static
> Destructor has no return type
> Destructor takes no argument.(No overloading is possible)
> It is invoked implicitly when object is going to destroy.

/*......We we use destructor.........*/
> It should be defined to release resources allocated to an object.

// 

Destructure is used to release the memory of object;

class Complex
{
private:
    int a, b;

public:
    ~Complex()
    {
        cout << "Destructor" << endl;
    }
};

void fun()
{
    Complex c1;
}
int main()
{
    fun();
    return 0;
}
