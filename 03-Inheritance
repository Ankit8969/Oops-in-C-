Types of Inheritance
> Single Inehritance
> Mulitlevel Inheritance
> Multiple Inheritance
> Hierachical Inheritance
> Hybrid Inheritance

It means Inherite the other class function to the other function classs

/* Single Inheritance */
class A
{
};
class B:public A
{
};

/* Multi level Inheritance */
class A
{
};
class B:public A
{
};
class C:public B
{
};

/* Multiple Inheritance */
class A1
{
};
class A2
{
};
class B:public A1,public A2
{
};

/* Hierarchical Inheritance */
/* having one parent class and two other class conected with that */
class A
{
};
class B1:public A
{
};
class B2:public A
{
};


/*.............................................Important Concept ....................*/

> VISITBILITY MODE IN INHERITANCE
If the class has three type of data 
class A
{
public:
int x;
private :
int y;
protected :
int z;
}

and we have one more class by using which we have to inherit the class A

# We have available all the data but we can't access all the data
# We can access the only protected and public data

class B: private A
{
	protected and public data both become private
}

class B: protected A
{
	protected and public data both become protected
}

class B: private A
{
	protected data are still protected
	and public data  are still public
}


/*................................................................................*/



#include <bits/stdc++.h>
using namespace std;

class Student
{
    int id;
    string s1;

public:
    void give();
};

void Student::give()
{
	id =2;
	s1 = "Ankit"
    cout << id << " " << s1 << endl;
}


class Teacher:public Student,public ForMoreClass-Write Like this
{
	public:
		int ind1;
	void solve()
	{
		cout<<"INherit"<<endl;
	}
};


// By this method we can use the other class variable

int main()
{
    Teacher t1;
	cout<<t1.s1<<endl;
}
